From f5a3949dcc116d7eda92c01c6a0b3277edb9876c Mon Sep 17 00:00:00 2001
From: Song Bing <bing.song@nxp.com>
Date: Sat, 8 Oct 2016 13:57:06 +0800
Subject: [PATCH 3/3] Enable Kodi on MX8DV.

Remove mxc special FB IO control.
Remove DCIC IO control for VSYNC.
Add IMX8VPU for MX8.

Signed-off-by: Song Bing bing.song@nxp.com
---
 configure.ac                            | 13 ++++++++++++-
 xbmc/linux/imx/IMX.cpp                  | 10 ++++++++++
 xbmc/settings/Settings.cpp              |  3 +++
 xbmc/video/VideoReferenceClock.cpp      |  4 ++--
 xbmc/video/videosync/VideoSyncIMX.cpp   |  2 +-
 xbmc/video/videosync/VideoSyncIMX.h     |  2 +-
 xbmc/windowing/egl/EGLNativeTypeIMX.cpp | 12 ++++++++----
 xbmc/windowing/egl/EGLWrapper.cpp       |  4 ++--
 xbmc/windowing/egl/Makefile.in          |  3 +++
 9 files changed, 42 insertions(+), 11 deletions(-)

diff --git a/configure.ac b/configure.ac
index fc81e73..2294741 100644
--- a/configure.ac
+++ b/configure.ac
@@ -475,7 +475,7 @@ AC_ARG_ENABLE([gtest],
 
 AC_ARG_ENABLE([codec],
   [AS_HELP_STRING([--enable-codec],
-  [enable additional codecs from a list of comma separated names, (default is none, choices are amcodec and imxvpu)])],
+  [enable additional codecs from a list of comma separated names, (default is none, choices are amcodec, imxvpu and imx8vpu)])],
   [add_codecs=$enableval],
   [add_codecs=no])
 
@@ -1741,6 +1741,17 @@ for codecs in `echo $add_codecs | sed 's/,/ /g'`; do
         CFLAGS="$CFLAGS -DEGL_API_FB"
       fi
       ;;
+    *imx8vpu*)
+      AC_CHECK_LIB([g2d], main, LIBS="$LIBS -lg2d", AC_MSG_ERROR($missing_library))
+      XB_ADD_CODEC([IMX8VPU], [imx8vpu], [$codecs])
+      CORE_SYSTEM_VARIANT=imx
+      CXXFLAGS="$CXXFLAGS -Wno-psabi -DLINUX "
+      CFLAGS="$CFLAGS -DLINUX"
+      if test "$use_x11" = "no"; then
+        CXXFLAGS="$CXXFLAGS -DEGL_API_FB"
+        CFLAGS="$CFLAGS -DEGL_API_FB"
+      fi
+      ;;
     *)
   esac
 done
diff --git a/xbmc/linux/imx/IMX.cpp b/xbmc/linux/imx/IMX.cpp
index e4284ac..3662119 100644
--- a/xbmc/linux/imx/IMX.cpp
+++ b/xbmc/linux/imx/IMX.cpp
@@ -20,7 +20,9 @@
 
 
 #include "IMX.h"
+#ifdef HAS_IMXVPU
 #include <linux/mxcfb.h>
+#endif
 #include <algorithm>
 
 /*
@@ -29,7 +31,9 @@
  *
  */
 
+#ifdef HAS_IMXVPU
 #include <linux/mxc_dcic.h>
+#endif
 #include <sys/ioctl.h>
 
 #include "guilib/GraphicContext.h"
@@ -88,6 +92,7 @@ void CIMX::Deinitialize()
 
 bool CIMX::UpdateDCIC()
 {
+#ifdef HAS_IMXVPU
   struct fb_var_screeninfo screen_info;
 
   if (!m_change)
@@ -121,10 +126,12 @@ bool CIMX::UpdateDCIC()
   m_lastSyncFlag = screen_info.sync;
 
   return true;
+#endif
 }
 
 void CIMX::Process()
 {
+#ifdef HAS_IMXVPU
   ioctl(m_fddcic, DCIC_IOC_START_VSYNC, 0);
   while (!m_bStop)
   {
@@ -138,6 +145,7 @@ void CIMX::Process()
     m_VblankEvent.Set();
   }
   ioctl(m_fddcic, DCIC_IOC_STOP_VSYNC, 0);
+#endif
 }
 
 int CIMX::WaitVsync()
@@ -165,6 +173,7 @@ void CIMX::OnResetDisplay()
 
 bool CIMXFps::Recalc()
 {
+#ifdef HAS_IMXVPU
   double prev = DVD_NOPTS_VALUE;
   unsigned int count = 0;
   double frameDuration = 0.0;
@@ -223,6 +232,7 @@ bool CIMXFps::Recalc()
   if (!m_hasPattern && ret)
     m_frameDuration = frameNorm;
   return ret;
+#endif
 }
 
 void CIMXFps::Add(double tm)
diff --git a/xbmc/settings/Settings.cpp b/xbmc/settings/Settings.cpp
index 3444a13..2447540 100644
--- a/xbmc/settings/Settings.cpp
+++ b/xbmc/settings/Settings.cpp
@@ -814,6 +814,9 @@ bool CSettings::InitializeDefinitions()
 #elif defined(HAS_IMXVPU)
   if (CFile::Exists(SETTINGS_XML_FOLDER "imx6.xml") && !Initialize(SETTINGS_XML_FOLDER "imx6.xml"))
     CLog::Log(LOGFATAL, "Unable to load imx6-specific settings definitions");
+#elif defined(HAS_IMX8VPU)
+  if (CFile::Exists(SETTINGS_XML_FOLDER "imx6.xml") && !Initialize(SETTINGS_XML_FOLDER "imx6.xml"))
+    CLog::Log(LOGFATAL, "Unable to load imx6-specific settings definitions");
 #elif defined(TARGET_LINUX)
   if (CFile::Exists(SETTINGS_XML_FOLDER "linux.xml") && !Initialize(SETTINGS_XML_FOLDER "linux.xml"))
     CLog::Log(LOGFATAL, "Unable to load linux-specific settings definitions");
diff --git a/xbmc/video/VideoReferenceClock.cpp b/xbmc/video/VideoReferenceClock.cpp
index a8dbdaf..e755d7b 100644
--- a/xbmc/video/VideoReferenceClock.cpp
+++ b/xbmc/video/VideoReferenceClock.cpp
@@ -34,7 +34,7 @@
 #include "windowing/WindowingFactory.h"
 #elif defined(TARGET_RASPBERRY_PI)
 #include "video/videosync/VideoSyncPi.h"
-#elif defined(HAS_IMXVPU)
+#elif defined(HAS_IMXVPU) || defined(HAS_IMX8VPU)
 #include "video/videosync/VideoSyncIMX.h"
 #endif
 #if defined(TARGET_WINDOWS)
@@ -121,7 +121,7 @@ void CVideoReferenceClock::Process()
     m_pVideoSync = new CVideoSyncIos(this);
 #elif defined(TARGET_RASPBERRY_PI)
     m_pVideoSync = new CVideoSyncPi(this);
-#elif defined(HAS_IMXVPU)
+#elif defined(HAS_IMXVPU) || defined(HAS_IMX8VPU)
     m_pVideoSync = new CVideoSyncIMX(this);
 #elif defined(TARGET_ANDROID)
     m_pVideoSync = new CVideoSyncAndroid(this);
diff --git a/xbmc/video/videosync/VideoSyncIMX.cpp b/xbmc/video/videosync/VideoSyncIMX.cpp
index fa7c27c..fc3fa3b 100644
--- a/xbmc/video/videosync/VideoSyncIMX.cpp
+++ b/xbmc/video/videosync/VideoSyncIMX.cpp
@@ -20,7 +20,7 @@
 
 #include "system.h"
 
-#if defined(HAS_IMXVPU)
+#if defined(HAS_IMXVPU) || defined(HAS_IMX8VPU)
 
 #include "video/videosync/VideoSyncIMX.h"
 #include "guilib/GraphicContext.h"
diff --git a/xbmc/video/videosync/VideoSyncIMX.h b/xbmc/video/videosync/VideoSyncIMX.h
index 7220ac6..8560a93 100644
--- a/xbmc/video/videosync/VideoSyncIMX.h
+++ b/xbmc/video/videosync/VideoSyncIMX.h
@@ -19,7 +19,7 @@
  *
  */
 
-#if defined(HAS_IMXVPU)
+#if defined(HAS_IMXVPU) || defined(HAS_IMX8VPU)
 
 #include "video/videosync/VideoSync.h"
 #include "guilib/DispResource.h"
diff --git a/xbmc/windowing/egl/EGLNativeTypeIMX.cpp b/xbmc/windowing/egl/EGLNativeTypeIMX.cpp
index 6efc015..f81dfdd 100644
--- a/xbmc/windowing/egl/EGLNativeTypeIMX.cpp
+++ b/xbmc/windowing/egl/EGLNativeTypeIMX.cpp
@@ -54,8 +54,12 @@ CEGLNativeTypeIMX::~CEGLNativeTypeIMX()
 
 bool CEGLNativeTypeIMX::CheckCompatibility()
 {
+#ifdef HAS_IMXVPU
   std::ifstream file("/sys/class/graphics/fb0/fsl_disp_dev_property");
   return file.is_open();
+#else
+  return true;
+#endif
 }
 
 void CEGLNativeTypeIMX::Initialize()
@@ -168,7 +172,7 @@ void CEGLNativeTypeIMX::Destroy()
 
 bool CEGLNativeTypeIMX::CreateNativeDisplay()
 {
-#ifdef HAS_IMXVPU
+#if defined(HAS_IMXVPU) || defined(HAS_IMX8VPU)
   // EGL will be rendered on fb0
   m_display = fbGetDisplayByIndex(0);
   m_nativeDisplay = &m_display;
@@ -180,7 +184,7 @@ bool CEGLNativeTypeIMX::CreateNativeDisplay()
 
 bool CEGLNativeTypeIMX::CreateNativeWindow()
 {
-#ifdef HAS_IMXVPU
+#if defined(HAS_IMXVPU) || defined(HAS_IMX8VPU)
   m_window = fbCreateWindow(m_display, 0, 0, 0, 0);
   m_nativeWindow = &m_window;
   return true;
@@ -211,7 +215,7 @@ bool CEGLNativeTypeIMX::GetNativeWindow(XBNativeWindowType **nativeWindow) const
 
 bool CEGLNativeTypeIMX::DestroyNativeDisplay()
 {
-#ifdef HAS_IMXVPU
+#if defined(HAS_IMXVPU) || defined(HAS_IMX8VPU)
   if (m_display)
     fbDestroyDisplay(m_display);
   m_display =  NULL;
@@ -223,7 +227,7 @@ bool CEGLNativeTypeIMX::DestroyNativeDisplay()
 
 bool CEGLNativeTypeIMX::DestroyNativeWindow()
 {
-#ifdef HAS_IMXVPU
+#if defined(HAS_IMXVPU) || defined(HAS_IMX8VPU)
   if (m_window)
     fbDestroyWindow(m_window);
   m_window =  NULL;
diff --git a/xbmc/windowing/egl/EGLWrapper.cpp b/xbmc/windowing/egl/EGLWrapper.cpp
index 30f5757..a6afc91 100644
--- a/xbmc/windowing/egl/EGLWrapper.cpp
+++ b/xbmc/windowing/egl/EGLWrapper.cpp
@@ -31,7 +31,7 @@
 #if defined(TARGET_RASPBERRY_PI)
   #include "EGLNativeTypeRaspberryPI.h"
 #endif
-#if defined(HAS_IMXVPU)
+#if defined(HAS_IMXVPU) || defined(HAS_IMX8VPU)
   #include "EGLNativeTypeIMX.h"
 #endif
 #if defined(TARGET_LINUX) && defined(HAS_LIBAMCODEC)
@@ -97,7 +97,7 @@ bool CEGLWrapper::Initialize(const std::string &implementation)
       (nativeGuess = CreateEGLNativeType<CEGLNativeTypeAndroid>(implementation))
 #elif defined(TARGET_RASPBERRY_PI)
       (nativeGuess = CreateEGLNativeType<CEGLNativeTypeRaspberryPI>(implementation))
-#elif defined(HAS_IMXVPU)
+#elif defined(HAS_IMXVPU) || defined(HAS_IMX8VPU)
       (nativeGuess = CreateEGLNativeType<CEGLNativeTypeIMX>(implementation))
 #elif defined(TARGET_LINUX) && defined(HAS_LIBAMCODEC)
       (nativeGuess = CreateEGLNativeType<CEGLNativeTypeAmlogic>(implementation))
diff --git a/xbmc/windowing/egl/Makefile.in b/xbmc/windowing/egl/Makefile.in
index 68f7862..460178f 100644
--- a/xbmc/windowing/egl/Makefile.in
+++ b/xbmc/windowing/egl/Makefile.in
@@ -12,6 +12,9 @@ endif
 ifeq (@USE_IMXVPU@,1)
 SRCS+= EGLNativeTypeIMX.cpp
 endif
+ifeq (@USE_IMX8VPU@,1)
+SRCS+= EGLNativeTypeIMX.cpp
+endif
 SRCS+= EGLWrapper.cpp
 
 LIB = windowing_egl.a
-- 
1.9.1

